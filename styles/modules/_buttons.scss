// 버튼 작업 시 3가지 요소 고려
// => 버튼의 style, size, state
// => 버튼의 대표적인 style 세가지: fill, outlined, ghost

%btn-base {
  @include inline-flexbox; // 버튼은 수평정렬, 버튼 안 자식요소(텍스트)는 가운데 정렬
  padding: 0 8px;
  font-weight: 700;
  border-radius: 4px;
  // border-radius 값은 앵간 통일됨 (button, input, text-area 등...)

  &.disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
}

// Button - styles, state
.btn-primary {
  @extend %btn-base;
  color: $white;
  background-color: $blue;
  transition: background-color 0.2s ease-in-out;

  // disabled 상태가 아닌 상태에서 hover 가 될 때
  &:not(.disabled):hover {
    background-color: $blue-dark;
  }
}

.btn-secondary {
  @extend %btn-base;
  color: $primary;
  background-color: $border;
  transition: background-color 0.2s ease-in-out;

  &:not(.disabled):hover {
    background-color: $tertiary;
  }
}

.btn-outlined {
  @extend %btn-base;
  color: $blue;
  background-color: $white;
  border: 1px solid $blue;
  transition: background-color 0.2s ease-in-out;

  &:not(.disabled):hover {
    background-color: $blue-light;
  }
}

.btn-ghost {
  @extend %btn-base;
  color: $primary;
  background-color: transparent;
  transition: color 0.2s ease-in-out;

  &:not(.disabled):hover {
    color: $secondary;
  }
}

// Button - size
// (버튼의 사이즈를 선언할 때 width 값은 선언 안하는 것이 좋음: 안의 가변적인 텍스트 때문에)
// 버튼의 height 값을 기준으로 크기를 잡아준다.
// style 과 size 관련 클래스를 두 개 적용시킬 것이기 때문에 여기서 또 %btn-base 를 @extend 할 필요 x
// ex. <div class="btn-primary btn-32">
.btn-32 {
  height: 32px;
  @include text-style(14);
}

.btn-40 {
  height: 40px;
  @include text-style(16);
}

.btn-48 {
  height: 48px;
  @include text-style(16);
}

.btn-55 {
  height: 55px;
  @include text-style(18);
}
